// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CTNApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250125165124_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CTNApp.Models.Fonction", b =>
                {
                    b.Property<int>("Id_Fct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Fct"));

                    b.Property<string>("Design_Fct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Fct");

                    b.ToTable("Fonctions");
                });

            modelBuilder.Entity("CTNApp.Models.Mouvement", b =>
                {
                    b.Property<int>("Matricule")
                        .HasColumnType("int");

                    b.Property<int>("IdNavire")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDeb")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEmb")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRemb")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Navire")
                        .HasColumnType("int");

                    b.Property<int?>("NavireId_Navire")
                        .HasColumnType("int");

                    b.Property<int?>("PersonnelMatricule")
                        .HasColumnType("int");

                    b.Property<string>("Remplaçant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricule", "IdNavire");

                    b.HasIndex("IdNavire");

                    b.HasIndex("NavireId_Navire");

                    b.HasIndex("PersonnelMatricule");

                    b.ToTable("Mouvements");
                });

            modelBuilder.Entity("CTNApp.Models.Navire", b =>
                {
                    b.Property<int>("Id_Navire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Navire"));

                    b.Property<string>("Design_Navire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Navire");

                    b.ToTable("Navires");
                });

            modelBuilder.Entity("CTNApp.Models.Pers_fct", b =>
                {
                    b.Property<int>("Matricule")
                        .HasColumnType("int");

                    b.Property<int>("IdFonctionnalite")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFct")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FonctionId_Fct")
                        .HasColumnType("int");

                    b.Property<int>("IdFonction")
                        .HasColumnType("int");

                    b.Property<int?>("PersonnelMatricule")
                        .HasColumnType("int");

                    b.HasKey("Matricule", "IdFonctionnalite");

                    b.HasIndex("FonctionId_Fct");

                    b.HasIndex("IdFonctionnalite");

                    b.HasIndex("PersonnelMatricule");

                    b.ToTable("PersFcts");
                });

            modelBuilder.Entity("CTNApp.Models.Pers_sit", b =>
                {
                    b.Property<int>("Matricule")
                        .HasColumnType("int");

                    b.Property<int>("IdSit")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PersonnelMatricule")
                        .HasColumnType("int");

                    b.Property<int?>("SituationId_Sit")
                        .HasColumnType("int");

                    b.HasKey("Matricule", "IdSit");

                    b.HasIndex("IdSit");

                    b.HasIndex("PersonnelMatricule");

                    b.HasIndex("SituationId_Sit");

                    b.ToTable("PersSits");
                });

            modelBuilder.Entity("CTNApp.Models.Personnel", b =>
                {
                    b.Property<int>("Matricule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Matricule"));

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId_Role")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Matricule");

                    b.HasIndex("RoleId_Role");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("CTNApp.Models.Role", b =>
                {
                    b.Property<int>("Id_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Role"));

                    b.Property<string>("Design_Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Role");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CTNApp.Models.Situation", b =>
                {
                    b.Property<int>("Id_Sit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Sit"));

                    b.Property<string>("Design_Sit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Sit");

                    b.ToTable("Situations");
                });

            modelBuilder.Entity("CTNApp.Models.Mouvement", b =>
                {
                    b.HasOne("CTNApp.Models.Navire", "Navire")
                        .WithMany()
                        .HasForeignKey("IdNavire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Personnel", "Personnel")
                        .WithMany()
                        .HasForeignKey("Matricule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Navire", null)
                        .WithMany("Mouvements")
                        .HasForeignKey("NavireId_Navire");

                    b.HasOne("CTNApp.Models.Personnel", null)
                        .WithMany("Mouvements")
                        .HasForeignKey("PersonnelMatricule");

                    b.Navigation("Navire");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("CTNApp.Models.Pers_fct", b =>
                {
                    b.HasOne("CTNApp.Models.Fonction", null)
                        .WithMany("Pers_fcts")
                        .HasForeignKey("FonctionId_Fct");

                    b.HasOne("CTNApp.Models.Fonction", "Fonction")
                        .WithMany()
                        .HasForeignKey("IdFonctionnalite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Personnel", "Personnel")
                        .WithMany()
                        .HasForeignKey("Matricule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Personnel", null)
                        .WithMany("Pers_fcts")
                        .HasForeignKey("PersonnelMatricule");

                    b.Navigation("Fonction");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("CTNApp.Models.Pers_sit", b =>
                {
                    b.HasOne("CTNApp.Models.Situation", "Situation")
                        .WithMany()
                        .HasForeignKey("IdSit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Personnel", "Personnel")
                        .WithMany()
                        .HasForeignKey("Matricule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTNApp.Models.Personnel", null)
                        .WithMany("Pers_sits")
                        .HasForeignKey("PersonnelMatricule");

                    b.HasOne("CTNApp.Models.Situation", null)
                        .WithMany("Pers_sits")
                        .HasForeignKey("SituationId_Sit");

                    b.Navigation("Personnel");

                    b.Navigation("Situation");
                });

            modelBuilder.Entity("CTNApp.Models.Personnel", b =>
                {
                    b.HasOne("CTNApp.Models.Role", null)
                        .WithMany("Personnels")
                        .HasForeignKey("RoleId_Role");
                });

            modelBuilder.Entity("CTNApp.Models.Fonction", b =>
                {
                    b.Navigation("Pers_fcts");
                });

            modelBuilder.Entity("CTNApp.Models.Navire", b =>
                {
                    b.Navigation("Mouvements");
                });

            modelBuilder.Entity("CTNApp.Models.Personnel", b =>
                {
                    b.Navigation("Mouvements");

                    b.Navigation("Pers_fcts");

                    b.Navigation("Pers_sits");
                });

            modelBuilder.Entity("CTNApp.Models.Role", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("CTNApp.Models.Situation", b =>
                {
                    b.Navigation("Pers_sits");
                });
#pragma warning restore 612, 618
        }
    }
}
